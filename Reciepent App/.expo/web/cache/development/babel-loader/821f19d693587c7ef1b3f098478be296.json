{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _CategoriesScreen = _interopRequireDefault(require(\"../screens/CategoriesScreen\"));\n\nvar _CategoryScreen = _interopRequireDefault(require(\"../screens/CategoryScreen\"));\n\nvar _FoodDetailScreen = _interopRequireDefault(require(\"../screens/FoodDetailScreen\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _foodsSlice = require(\"../redux/foodsSlice\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\React-Native-Applications\\\\Reciepent App\\\\navigation\\\\MealsNavigation.js\";\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nvar MealsNavigation = function MealsNavigation() {\n  return _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"Categories\",\n    mode: \"modal\",\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerLeft: function headerLeft() {\n          return _react.default.createElement(_reactNativeElements.Button, {\n            type: \"clear\",\n            titleStyle: {\n              color: '#333',\n              marginLeft: 7,\n              fontSize: 17\n            },\n            icon: _react.default.createElement(_vectorIcons.AntDesign, {\n              name: \"arrowleft\",\n              size: 22,\n              color: \"#333\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 31\n              }\n            }),\n            onPress: function onPress() {\n              return navigation.goBack();\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }\n          });\n        },\n        headerLeftContainerStyle: {\n          marginLeft: 10\n        },\n        animationEnabled: true\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Categories\",\n    component: _CategoriesScreen.default,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: \"Meal Categories\",\n        headerTitleStyle: {\n          marginLeft: 10\n        },\n        headerTitleAlign: 'center',\n        headerLeft: function headerLeft() {\n          return _react.default.createElement(_reactNativeElements.Button, {\n            type: \"clear\",\n            icon: _react.default.createElement(_vectorIcons.MaterialIcons, {\n              name: \"menu\",\n              size: 24,\n              color: \"#111\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 35\n              }\n            }),\n            onPress: function onPress() {\n              return navigation.openDrawer();\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }\n          });\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Category\",\n    component: _CategoryScreen.default,\n    options: function options(_ref3) {\n      var route = _ref3.route;\n      return {\n        title: route.params.title,\n        headerTitleAlign: 'center',\n        headerStyle: {\n          backgroundColor: route.params.color\n        },\n        headerTitleStyle: {\n          color: 'black',\n          fontSize: 20\n        },\n        headerRight: function headerRight() {\n          return _react.default.createElement(_reactNativeElements.Button, {\n            icon: _react.default.createElement(_vectorIcons.AntDesign, {\n              name: \"plus\",\n              size: 22,\n              color: \"#333\",\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 35\n              }\n            }),\n            type: \"clear\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }\n          });\n        },\n        headerRightContainerStyle: {\n          marginRight: 10\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"FoodDetail\",\n    component: _FoodDetailScreen.default,\n    options: function options(_ref4) {\n      var route = _ref4.route,\n          navigation = _ref4.navigation;\n      return {\n        title: route.params.item.title,\n        headerTitleAlign: 'center',\n        headerRight: function headerRight() {\n          var isFavorited = (0, _reactRedux.useSelector)(_foodsSlice.getFavoriteFoods).find(function (item) {\n            return item === route.params.item;\n          });\n          var dispatch = (0, _reactRedux.useDispatch)();\n\n          if (isFavorited) {\n            return _react.default.createElement(_reactNativeElements.Button, {\n              icon: _react.default.createElement(_vectorIcons.MaterialIcons, {\n                name: \"favorite\",\n                size: 22,\n                color: \"#333\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 43\n                }\n              }),\n              type: \"clear\",\n              onPress: function onPress() {\n                return dispatch((0, _foodsSlice.deleteFavoriteFood)(route.params.item));\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }\n            });\n          } else {\n            return _react.default.createElement(_reactNativeElements.Button, {\n              icon: _react.default.createElement(_vectorIcons.MaterialIcons, {\n                name: \"favorite-outline\",\n                size: 22,\n                color: \"#333\",\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 43\n                }\n              }),\n              type: \"clear\",\n              onPress: function onPress() {\n                dispatch((0, _foodsSlice.addFavoriteFoods)(route.params.item));\n                navigation.navigate('Favorites');\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }\n            });\n          }\n        },\n        headerRightContainerStyle: {\n          marginRight: 10\n        }\n      };\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar _default = MealsNavigation;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/React-Native-Applications/Reciepent App/navigation/MealsNavigation.js"],"names":["Stack","MealsNavigation","navigation","headerLeft","color","marginLeft","fontSize","goBack","headerLeftContainerStyle","animationEnabled","CategoriesScreen","title","headerTitleStyle","headerTitleAlign","openDrawer","CategoryScreen","route","params","headerStyle","backgroundColor","headerRight","headerRightContainerStyle","marginRight","FoodDetailScreen","item","isFavorited","getFavoriteFoods","find","dispatch","navigate"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button } from 'react-native-elements'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport CategoriesScreen from '../screens/CategoriesScreen'\r\nimport CategoryScreen from '../screens/CategoryScreen'\r\nimport FoodDetailScreen from '../screens/FoodDetailScreen'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getFavoriteFoods, addFavoriteFoods, deleteFavoriteFood } from '../redux/foodsSlice'\r\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons' \r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst MealsNavigation = () => {\r\n    return (\r\n        <Stack.Navigator \r\n            initialRouteName=\"Categories\" \r\n            mode=\"modal\"\r\n            screenOptions={({ navigation }) => ({\r\n                headerLeft: () => (\r\n                    <Button \r\n                        type=\"clear\"\r\n                        titleStyle={{ color: '#333', marginLeft: 7, fontSize: 17 }}\r\n                        icon={<AntDesign name=\"arrowleft\" size={22} color=\"#333\" />}\r\n                        onPress={() => navigation.goBack()}\r\n                    />\r\n                ),\r\n                headerLeftContainerStyle: {\r\n                    marginLeft: 10\r\n                },\r\n                animationEnabled: true,\r\n            })}\r\n        >\r\n            <Stack.Screen \r\n                name=\"Categories\" \r\n                component={CategoriesScreen} \r\n                options={({ navigation }) => ({\r\n                    title: \"Meal Categories\",\r\n                    headerTitleStyle: {\r\n                        marginLeft: 10\r\n                    },\r\n                    headerTitleAlign: 'center',\r\n                    headerLeft: () => (\r\n                        <Button\r\n                            type=\"clear\"\r\n                            icon={<MaterialIcons name=\"menu\" size={24} color=\"#111\" />}\r\n                            onPress={() => navigation.openDrawer()}\r\n                        />\r\n                    )\r\n                })}                    \r\n            />\r\n\r\n            <Stack.Screen \r\n                name=\"Category\" \r\n                component={CategoryScreen} \r\n                options={({ route }) => ({\r\n                    title: route.params.title,\r\n                    headerTitleAlign: 'center',\r\n                    headerStyle: {\r\n                        backgroundColor: route.params.color\r\n                    },\r\n                    headerTitleStyle: {\r\n                        color: 'black',\r\n                        fontSize: 20,\r\n                    },\r\n                    headerRight: () => (\r\n                        <Button\r\n                            icon={<AntDesign name=\"plus\" size={22} color=\"#333\" />}\r\n                            type=\"clear\"\r\n                        />\r\n                    ),\r\n                    headerRightContainerStyle: {\r\n                        marginRight: 10\r\n                    }                        \r\n                })}\r\n            />\r\n\r\n            <Stack.Screen \r\n                name=\"FoodDetail\" \r\n                component={FoodDetailScreen} \r\n                options={({ route, navigation }) => ({\r\n                    title: route.params.item.title,\r\n                    headerTitleAlign: 'center',\r\n                    headerRight: () => {\r\n                        const isFavorited = useSelector(getFavoriteFoods).find((item) => item === route.params.item)\r\n                        const dispatch = useDispatch()\r\n                        if(isFavorited) {\r\n                            return (\r\n                                <Button\r\n                                    icon={<MaterialIcons name=\"favorite\" size={22} color=\"#333\" />}\r\n                                    type=\"clear\"\r\n                                    onPress={() => dispatch(deleteFavoriteFood(route.params.item))}\r\n                                />\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Button\r\n                                    icon={<MaterialIcons name=\"favorite-outline\" size={22} color=\"#333\" />}\r\n                                    type=\"clear\"\r\n                                    onPress={() => {\r\n                                        dispatch(addFavoriteFoods(route.params.item))\r\n                                        navigation.navigate('Favorites')\r\n                                    }}\r\n                                />\r\n                            )\r\n                        }\r\n                    },\r\n                    headerRightContainerStyle: {\r\n                        marginRight: 10\r\n                    }    \r\n                })}\r\n            />\r\n        </Stack.Navigator>\r\n    )\r\n}\r\n\r\nexport default MealsNavigation\r\n"]},"metadata":{},"sourceType":"script"}