{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\ReactNativeApps\\\\recepient-app\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'open-sans': require(\"./assets/Fonts/OpenSans-Regular.ttf\"),\n    'open-sans-bold': require(\"./assets/Fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      onError: function onError() {\n        return console.log(\"error\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"hebele h\\xFCbele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Open up App.js to start working on your app!\"), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/ReactNativeApps/recepient-app/App.js"],"names":["StatusBar","React","useState","Font","AppLoading","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoaded","console","log","styles","container","Platform","OS","StyleSheet","create","flex","backgroundColor","alignItems"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,SAAOF,IAAI,CAACG,SAAL,CAAe;AAClB,iBAAaC,OAAO,uCADF;AAElB,sBAAkBA,OAAO;AAFP,GAAf,CAAP;AAIH,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEUN,QAAQ,CAAC,KAAD,CAFlB;AAAA;AAAA,MAEnBO,UAFmB;AAAA,MAEPC,aAFO;;AAI1B,MAAI,CAACD,UAAL,EAAiB;AACb,WACI,oBAAC,UAAD;AACI,MAAA,UAAU,EAAEJ,UADhB;AAEI,MAAA,QAAQ,EAAE;AAAA,eAAMK,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFd;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AACD,SACI,oBAAC,oBAAD;AACI,IAAA,KAAK,EAAEC,MAAM,CAACC,SADlB;AAEI,IAAA,QAAQ,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAkC,QAFhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,kBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAPJ,EAQI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAYH;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE;AAHH;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, KeyboardAvoidingView, Platform, TextInput, Text } from 'react-native';\nimport * as Font from 'expo-font'\nimport AppLoading from 'expo-app-loading';\n\nconst fetchFonts = () => {\n    return Font.loadAsync({\n        'open-sans': require('./assets/Fonts/OpenSans-Regular.ttf'),\n        'open-sans-bold': require('./assets/Fonts/OpenSans-Bold.ttf')\n    })\n}\n\nexport default function App() {\n\n    const [fontLoaded, setFontLoaded] = useState(false)\n\n    if (!fontLoaded) {\n        return (\n            <AppLoading \n                startAsync={fetchFonts} \n                onFinish={() => setFontLoaded(true)} \n                onError={() => console.log(\"error\")}\n            />\n        )\n    }\n    return (\n        <KeyboardAvoidingView\n            style={styles.container}\n            behavior={Platform.OS === 'ios' ? 'padding':'height'}\n        >\n            <TextInput \n                placeholder=\"hebele hÃ¼bele\"\n            />\n            <Text>Open up App.js to start working on your app!</Text>\n            <StatusBar style=\"auto\" />\n        </KeyboardAvoidingView>\n    );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}