{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SegmentsSeparators = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\React-Native-Applications\\\\Reciepent App\\\\node_modules\\\\@react-native-community\\\\segmented-control\\\\js\\\\SegmentsSeparators.js\";\n\nvar SegmentsSeparators = function SegmentsSeparators(_ref) {\n  var values = _ref.values,\n      selectedIndex = _ref.selectedIndex;\n  var colorScheme = (0, _reactNative.useColorScheme)();\n\n  var hide = function hide(val) {\n    return selectedIndex === val || selectedIndex === val + 1;\n  };\n\n  return React.createElement(_reactNative.View, {\n    style: styles.separatorsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, (0, _toConsumableArray2.default)(Array(values - 1).keys()).map(function (val) {\n    return React.createElement(_reactNative.View, {\n      key: val,\n      style: [styles.separator, colorScheme === 'dark' && styles.darkSeparator, hide(val) && styles.hide],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexports.SegmentsSeparators = SegmentsSeparators;\n\nvar styles = _reactNative.StyleSheet.create({\n  separatorsContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  separator: {\n    width: 1,\n    height: '50%',\n    backgroundColor: '#D1D1D4'\n  },\n  darkSeparator: {\n    backgroundColor: '#3F3F42'\n  },\n  hide: {\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/React-Native-Applications/Reciepent App/node_modules/@react-native-community/segmented-control/js/SegmentsSeparators.js"],"names":["SegmentsSeparators","values","selectedIndex","colorScheme","hide","val","styles","separatorsContainer","Array","keys","map","separator","darkSeparator","StyleSheet","create","position","top","left","right","bottom","flexDirection","alignItems","justifyContent","width","height","backgroundColor"],"mappings":"AAIA;;;;;;;;;;;;;AAEA;;AAEA;;;;;AAOO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,OAGT;AAAA,MAFvBC,MAEuB,QAFvBA,MAEuB;AAAA,MADvBC,aACuB,QADvBA,aACuB;AACvB,MAAMC,WAAW,GAAG,kCAApB;;AACA,MAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,GAAD,EAAS;AACpB,WAAOH,aAAa,KAAKG,GAAlB,IAAyBH,aAAa,KAAKG,GAAG,GAAG,CAAxD;AACD,GAFD;;AAIA,SACE,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,iCAAIC,KAAK,CAACP,MAAM,GAAG,CAAV,CAAL,CAAkBQ,IAAlB,EAAJ,EAA8BC,GAA9B,CAAkC,UAACL,GAAD,EAAS;AAC1C,WACE,oBAAC,iBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,KAAK,EAAE,CACLC,MAAM,CAACK,SADF,EAELR,WAAW,KAAK,MAAhB,IAA0BG,MAAM,CAACM,aAF5B,EAGLR,IAAI,CAACC,GAAD,CAAJ,IAAaC,MAAM,CAACF,IAHf,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GAXA,CADH,CADF;AAgBD,CAzBM;;;;AA2BP,IAAME,MAAM,GAAGO,wBAAWC,MAAX,CAAkB;AAC/BP,EAAAA,mBAAmB,EAAE;AACnBQ,IAAAA,QAAQ,EAAE,UADS;AAEnBC,IAAAA,GAAG,EAAE,CAFc;AAGnBC,IAAAA,IAAI,EAAE,CAHa;AAInBC,IAAAA,KAAK,EAAE,CAJY;AAKnBC,IAAAA,MAAM,EAAE,CALW;AAMnBC,IAAAA,aAAa,EAAE,KANI;AAOnBC,IAAAA,UAAU,EAAE,QAPO;AAQnBC,IAAAA,cAAc,EAAE;AARG,GADU;AAW/BX,EAAAA,SAAS,EAAE;AACTY,IAAAA,KAAK,EAAE,CADE;AAETC,IAAAA,MAAM,EAAE,KAFC;AAGTC,IAAAA,eAAe,EAAE;AAHR,GAXoB;AAgB/Bb,EAAAA,aAAa,EAAE;AACba,IAAAA,eAAe,EAAE;AADJ,GAhBgB;AAmB/BrB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,eAAe,EAAE;AADb;AAnByB,CAAlB,CAAf","sourcesContent":["/**\n * @flow\n */\n\n'use strict';\n\nimport * as React from 'react';\n\nimport {StyleSheet, View, useColorScheme} from 'react-native';\n\ntype Props = $ReadOnly<{|\n  values: number,\n  selectedIndex: ?number,\n|}>;\n\nexport const SegmentsSeparators = ({\n  values,\n  selectedIndex,\n}: Props): React.Node => {\n  const colorScheme = useColorScheme();\n  const hide = (val) => {\n    return selectedIndex === val || selectedIndex === val + 1;\n  };\n\n  return (\n    <View style={styles.separatorsContainer}>\n      {[...Array(values - 1).keys()].map((val) => {\n        return (\n          <View\n            key={val}\n            style={[\n              styles.separator,\n              colorScheme === 'dark' && styles.darkSeparator,\n              hide(val) && styles.hide,\n            ]}\n          />\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  separatorsContainer: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n  },\n  separator: {\n    width: 1,\n    height: '50%',\n    backgroundColor: '#D1D1D4',\n  },\n  darkSeparator: {\n    backgroundColor: '#3F3F42',\n  },\n  hide: {\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}