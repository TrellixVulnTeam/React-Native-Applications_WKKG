{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar Font = _interopRequireWildcard(require(\"expo-font\"));\n\nvar _expoAppLoading = _interopRequireDefault(require(\"expo-app-loading\"));\n\nvar _DrawerNavigation = _interopRequireDefault(require(\"./navigation/DrawerNavigation\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _store = _interopRequireDefault(require(\"./redux/store\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\React-Native-Applications\\\\Reciepent App\\\\App.js\";\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    'open-sans': require('./assets/Fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/Fonts/OpenSans-Bold.ttf')\n  });\n};\n\nvar App = function App() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return _react.default.createElement(_reactRedux.Provider, {\n      store: _store.default,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_expoAppLoading.default, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      onError: function onError() {\n        return console.log(\"error\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return _react.default.createElement(_reactRedux.Provider, {\n    store: _store.default,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_DrawerNavigation.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_expoStatusBar.StatusBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/React-Native-Applications/Reciepent App/App.js"],"names":["fetchFonts","Font","loadAsync","require","App","fontLoaded","setFontLoaded","store","console","log"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,SAAOC,IAAI,CAACC,SAAL,CAAe;AAClB,iBAAaC,OAAO,CAAC,qCAAD,CADF;AAElB,sBAAkBA,OAAO,CAAC,kCAAD;AAFP,GAAf,CAAP;AAIH,CALD;;AAOA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBAEsB,qBAAS,KAAT,CAFtB;AAAA;AAAA,MAEPC,UAFO;AAAA,MAEKC,aAFL;;AAId,MAAI,CAACD,UAAL,EAAiB;AACb,WACI,6BAAC,oBAAD;AAAU,MAAA,KAAK,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,6BAAC,uBAAD;AACI,MAAA,UAAU,EAAEP,UADhB;AAEI,MAAA,QAAQ,EAAE;AAAA,eAAMM,aAAa,CAAC,IAAD,CAAnB;AAAA,OAFd;AAGI,MAAA,OAAO,EAAE;AAAA,eAAME,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAN;AAAA,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AASH;;AACD,SACI,6BAAC,oBAAD;AAAU,IAAA,KAAK,EAAEF,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,6BAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CArBD;;eAuBeH,G","sourcesContent":["import { StatusBar } from 'expo-status-bar'\r\nimport React, { useState } from 'react'\r\nimport * as Font from 'expo-font'\r\nimport AppLoading from 'expo-app-loading'\r\nimport DrawerNavigation from './navigation/DrawerNavigation'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nconst fetchFonts = () => {\r\n    return Font.loadAsync({\r\n        'open-sans': require('./assets/Fonts/OpenSans-Regular.ttf'),\r\n        'open-sans-bold': require('./assets/Fonts/OpenSans-Bold.ttf')\r\n    })\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [fontLoaded, setFontLoaded] = useState(false)\r\n\r\n    if (!fontLoaded) {\r\n        return (\r\n            <Provider store={store}>\r\n                <AppLoading \r\n                    startAsync={fetchFonts} \r\n                    onFinish={() => setFontLoaded(true)} \r\n                    onError={() => console.log(\"error\")}\r\n                />\r\n            </Provider>\r\n        )\r\n    }\r\n    return (\r\n        <Provider store={store}>\r\n            <DrawerNavigation />\r\n            <StatusBar />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"script"}