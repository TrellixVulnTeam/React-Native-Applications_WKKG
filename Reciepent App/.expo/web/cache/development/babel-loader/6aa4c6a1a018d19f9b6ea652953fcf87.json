{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _MealItem = _interopRequireDefault(require(\"../components/MealItem\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _foodsSlice = require(\"../redux/foodsSlice\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\React-Native-Applications\\\\Reciepent App\\\\screens\\\\CategoryScreen.js\";\n\nvar CategoryScreen = function CategoryScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params.id;\n  var meals = (0, _reactRedux.useSelector)(_foodsSlice.getFoods).filter(function (item) {\n    return item.categoryIds.indexOf(id) >= 0;\n  });\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    data: meals,\n    style: styles.list,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_MealItem.default, {\n        item: item,\n        navigation: navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 43\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar _default = CategoryScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  list: {\n    flex: 1,\n    width: '100%',\n    paddingVertical: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/React-Native-Applications/Reciepent App/screens/CategoryScreen.js"],"names":["CategoryScreen","route","navigation","id","params","meals","getFoods","filter","item","categoryIds","indexOf","styles","container","list","StyleSheet","create","flex","justifyContent","alignItems","width","paddingVertical"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAE9C,MAAMC,EAAE,GAAGF,KAAK,CAACG,MAAN,CAAaD,EAAxB;AACA,MAAME,KAAK,GAAG,6BAAYC,oBAAZ,EAAsBC,MAAtB,CAA6B,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,WAAL,CAAiBC,OAAjB,CAAyBP,EAAzB,KAAgC,CAA1C;AAAA,GAA7B,CAAd;AAEA,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,qBAAD;AACI,IAAA,IAAI,EAAEP,KADV;AAEI,IAAA,KAAK,EAAEM,MAAM,CAACE,IAFlB;AAGI,IAAA,UAAU,EAAE;AAAA,UAAGL,IAAH,SAAGA,IAAH;AAAA,aAAc,6BAAC,iBAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAsB,QAAA,UAAU,EAAEN,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AASH,CAdD;;eAgBeF,c;;;AAEf,IAAMW,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADkB;AAM7BL,EAAAA,IAAI,EAAE;AACFG,IAAAA,IAAI,EAAE,CADJ;AAEFG,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,eAAe,EAAE;AAHf;AANuB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { FlatList, StyleSheet,  View } from 'react-native'\r\nimport MealItem from '../components/MealItem'\r\nimport { useSelector } from 'react-redux'\r\nimport { getFoods } from '../redux/foodsSlice'\r\n\r\nconst CategoryScreen = ({ route, navigation }) => {\r\n    \r\n    const id = route.params.id\r\n    const meals = useSelector(getFoods).filter((item) => item.categoryIds.indexOf(id) >= 0)\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n                data={meals}\r\n                style={styles.list}\r\n                renderItem={({ item }) => <MealItem item={item} navigation={navigation} />}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CategoryScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    list: {\r\n        flex: 1,\r\n        width: '100%',\r\n        paddingVertical: 0,\r\n    }\r\n})"]},"metadata":{},"sourceType":"script"}