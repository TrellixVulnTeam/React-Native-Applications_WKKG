{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\ReactNativeApps\\\\recepient-app\\\\components\\\\CategoryItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ListItem } from 'react-native-elements';\n\nvar CategoryItem = function CategoryItem(_ref) {\n  var item = _ref.item,\n      navigation = _ref.navigation;\n  var TouchableComponent = Platform.OS === \"android\" ? TouchableNativeFeedback : TouchableOpacity;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    background: TouchableNativeFeedback.Ripple('red'),\n    style: _objectSpread(_objectSpread({}, styles.item), {}, {\n      backgroundColor: item.color\n    }),\n    onPress: function onPress() {\n      return navigation.navigate('Category', {\n        id: item.id,\n        title: item.title\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, React.createElement(ListItem, {\n    containerStyle: _objectSpread({}, styles.itemContainer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, React.createElement(ListItem.Title, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }, item.title))));\n};\n\nexport default CategoryItem;\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 15\n  },\n  item: {\n    marginVertical: 10,\n    borderRadius: 10,\n    marginBottom: 10,\n    borderRadius: 20\n  },\n  title: {\n    marginLeft: 15,\n    fontSize: 25,\n    fontFamily: 'open-sans'\n  },\n  itemContainer: {\n    height: 150,\n    display: 'flex',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-end',\n    shadowColor: 'black',\n    shadowOpacity: 0.25,\n    backgroundColor: 'transparent',\n    shadowRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/ReactNativeApps/recepient-app/components/CategoryItem.js"],"names":["React","ListItem","CategoryItem","item","navigation","TouchableComponent","Platform","OS","TouchableNativeFeedback","TouchableOpacity","styles","container","Ripple","backgroundColor","color","navigate","id","title","itemContainer","StyleSheet","create","marginBottom","marginVertical","borderRadius","marginLeft","fontSize","fontFamily","height","display","alignItems","justifyContent","shadowColor","shadowOpacity","shadowRadius"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA0B;AAAA,MAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAC3C,MAAMC,kBAAkB,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,uBAA5B,GAAoDC,gBAA/E;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,UAAU,EAAEH,uBAAuB,CAACI,MAAxB,CAA+B,KAA/B,CADhB;AAEI,IAAA,KAAK,kCAAMF,MAAM,CAACP,IAAb;AAAmBU,MAAAA,eAAe,EAAEV,IAAI,CAACW;AAAzC,MAFT;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMV,UAAU,CAACW,QAAX,CAAoB,UAApB,EAAgC;AAC3CC,QAAAA,EAAE,EAAEb,IAAI,CAACa,EADkC;AAE3CC,QAAAA,KAAK,EAAEd,IAAI,CAACc;AAF+B,OAAhC,CAAN;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,QAAD;AAAU,IAAA,cAAc,oBAAOP,MAAM,CAACQ,aAAd,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,KAAV;AAAgB,IAAA,KAAK,EAAER,MAAM,CAACO,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMd,IAAI,CAACc,KADX,CADJ,CARJ,CADJ,CADJ;AAkBH,CApBD;;AAsBA,eAAef,YAAf;AAEA,IAAMQ,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,YAAY,EAAE;AADP,GADkB;AAI7BlB,EAAAA,IAAI,EAAE;AACFmB,IAAAA,cAAc,EAAE,EADd;AAEFC,IAAAA,YAAY,EAAE,EAFZ;AAGFF,IAAAA,YAAY,EAAE,EAHZ;AAIFE,IAAAA,YAAY,EAAE;AAJZ,GAJuB;AAU7BN,EAAAA,KAAK,EAAE;AACHO,IAAAA,UAAU,EAAE,EADT;AAEHC,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,UAAU,EAAE;AAHT,GAVsB;AAe7BR,EAAAA,aAAa,EAAE;AACXS,IAAAA,MAAM,EAAE,GADG;AAEXC,IAAAA,OAAO,EAAE,MAFE;AAGXC,IAAAA,UAAU,EAAE,UAHD;AAIXC,IAAAA,cAAc,EAAE,UAJL;AAKXC,IAAAA,WAAW,EAAE,OALF;AAMXC,IAAAA,aAAa,EAAE,IANJ;AAOXnB,IAAAA,eAAe,EAAE,aAPN;AAQXoB,IAAAA,YAAY,EAAE;AARH;AAfc,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { StyleSheet, View, TouchableOpacity, TouchableNativeFeedback, Platform } from 'react-native'\r\nimport { ListItem } from 'react-native-elements'\r\n\r\nconst CategoryItem = ({ item, navigation }) => {\r\n    const TouchableComponent = Platform.OS === \"android\" ? TouchableNativeFeedback:TouchableOpacity\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity \r\n                background={TouchableNativeFeedback.Ripple('red')}\r\n                style={{...styles.item, backgroundColor: item.color}}\r\n                onPress={() => navigation.navigate('Category', {\r\n                    id: item.id,\r\n                    title: item.title\r\n                })}\r\n            >\r\n                <ListItem containerStyle={{ ...styles.itemContainer}}>\r\n                    <ListItem.Title style={styles.title}>\r\n                        { item.title }\r\n                    </ListItem.Title>\r\n                </ListItem>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CategoryItem\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginBottom: 15,\r\n    },\r\n    item: {\r\n        marginVertical: 10,\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n        borderRadius: 20,\r\n    },\r\n    title: {\r\n        marginLeft: 15,\r\n        fontSize: 25,\r\n        fontFamily: 'open-sans'\r\n    },\r\n    itemContainer: {\r\n        height: 150,\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.25,\r\n        backgroundColor: 'transparent',\r\n        shadowRadius: 10,\r\n    },  \r\n})\r\n"]},"metadata":{},"sourceType":"module"}