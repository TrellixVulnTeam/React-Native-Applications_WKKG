{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _FilterItem = _interopRequireDefault(require(\"../components/FilterItem\"));\n\nvar _reactNative2 = require(\"@ant-design/react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\erhan\\\\Documents\\\\GitHub\\\\React-Native-Applications\\\\Reciepent App\\\\screens\\\\FiltersScreen.js\";\n\nvar FiltersScreen = function FiltersScreen() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      gluten = _useState2[0],\n      setGluten = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      lactose = _useState4[0],\n      setLactose = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      vegan = _useState6[0],\n      setVegan = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      vegeterian = _useState8[0],\n      setVegeterian = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      timeRange = _useState10[0],\n      setTimeRange = _useState10[1];\n\n  var _useState11 = (0, _react.useState)([10]),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      number = _useState12[0],\n      setNumber = _useState12[1];\n\n  var durations = [];\n\n  for (var index = 0; index < 13; index++) {\n    durations.push({\n      label: index * 10 + \" min\",\n      value: index * 10\n    });\n  }\n\n  console.log(number);\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeElements.Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Avaible Filters\"), _react.default.createElement(_reactNative.View, {\n    style: {\n      marginBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_FilterItem.default, {\n    val: gluten,\n    onChange: setGluten,\n    title: \"Gluten-Free\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_FilterItem.default, {\n    val: lactose,\n    onChange: setLactose,\n    title: \"Lactose-Free\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_FilterItem.default, {\n    val: vegan,\n    onChange: setVegan,\n    title: \"Vegan\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_FilterItem.default, {\n    val: vegeterian,\n    onChange: setVegeterian,\n    title: \"Vegeterian\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_FilterItem.default, {\n    val: timeRange,\n    onChange: setTimeRange,\n    title: \"Select Time Range\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), timeRange && _react.default.createElement(_react.default.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.picker,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNative2.PickerView, {\n    onChange: function onChange(value) {\n      return setNumber(value);\n    },\n    value: number,\n    data: durations,\n    cascade: false,\n    itemStyle: {\n      marginVertical: 7\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  })), _react.default.createElement(_reactNativeElements.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })));\n};\n\nvar _default = FiltersScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 30,\n    paddingHorizontal: 30\n  },\n  title: {\n    fontSize: 22,\n    textAlign: 'left'\n  },\n  picker: {\n    marginTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 150,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["C:/Users/erhan/Documents/GitHub/React-Native-Applications/Reciepent App/screens/FiltersScreen.js"],"names":["FiltersScreen","gluten","setGluten","lactose","setLactose","vegan","setVegan","vegeterian","setVegeterian","timeRange","setTimeRange","number","setNumber","durations","index","push","label","value","console","log","styles","container","title","marginBottom","picker","marginVertical","StyleSheet","create","flex","paddingTop","paddingHorizontal","fontSize","textAlign","marginTop","display","justifyContent","alignItems","height","overflow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, StyleSheet } from 'react-native'\r\nimport { Text, Divider, Button  } from 'react-native-elements'\r\nimport FilterItem from '../components/FilterItem'\r\nimport { PickerView } from '@ant-design/react-native'\r\n\r\n\r\nconst FiltersScreen = () => {   \r\n    const [gluten, setGluten] = useState(false)\r\n    const [lactose, setLactose] = useState(false)\r\n    const [vegan, setVegan] = useState(false)\r\n    const [vegeterian, setVegeterian] = useState(false)\r\n    const [timeRange, setTimeRange] = useState(false)\r\n    const [number, setNumber] = useState([10])\r\n\r\n    const durations = []\r\n    for (let index = 0; index < 13; index++) {\r\n        durations.push({ label: `${index * 10} min`, value: index * 10})\r\n    }\r\n    \r\n    console.log(number)\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>Avaible Filters</Text>\r\n            <View style={{ marginBottom: 25 }}/>\r\n            <FilterItem \r\n                val={gluten}\r\n                onChange={setGluten}\r\n                title=\"Gluten-Free\"\r\n            />\r\n            <FilterItem \r\n                val={lactose}\r\n                onChange={setLactose}\r\n                title=\"Lactose-Free\"\r\n            />\r\n            <FilterItem \r\n                val={vegan}\r\n                onChange={setVegan}\r\n                title=\"Vegan\"\r\n            />\r\n            <FilterItem \r\n                val={vegeterian}\r\n                onChange={setVegeterian}\r\n                title=\"Vegeterian\"\r\n            />\r\n            <FilterItem \r\n                val={timeRange}\r\n                onChange={setTimeRange}\r\n                title=\"Select Time Range\"\r\n            />\r\n            {timeRange && (\r\n                <React.Fragment>\r\n                    <View style={styles.picker}>\r\n                        <PickerView\r\n                            onChange={(value) => setNumber(value)}\r\n                            value={number}\r\n                            data={durations}\r\n                            cascade={false}\r\n                            itemStyle={{ marginVertical: 7 }}\r\n                        />\r\n                    </View>\r\n                    <Text></Text>\r\n                </React.Fragment>\r\n            )}\r\n            \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default FiltersScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingTop: 30,\r\n        paddingHorizontal: 30\r\n    },\r\n    title: {\r\n        fontSize: 22,\r\n        textAlign: 'left'\r\n    },\r\n    picker: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 150,\r\n        overflow: 'hidden'\r\n    }\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"script"}